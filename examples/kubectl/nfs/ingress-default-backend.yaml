---
# create an ingress-default-backend in both the
# default & autostructure-development namespaces.
# the backend is used by the nginx controller implementation
# to display 404 errors.
kind: Service
apiVersion: v1
metadata:
  namespace: default
  name: nginx-ingress-default-backend
spec:
  ports:
  - port: 80
    targetPort: http
  selector:
    app: nginx-ingress-default-backend
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  namespace: default
  name: nginx-ingress-default-backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress-default-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        image: gcr.io/google_containers/defaultbackend:1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
---
kind: Service
apiVersion: v1
metadata:
  namespace: autostructure-development
  name: nginx-ingress-default-backend
spec:
  ports:
  - port: 80
    targetPort: http
  selector:
    app: nginx-ingress-default-backend
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  namespace: autostructure-development
  name: nginx-ingress-default-backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-ingress-default-backend
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        image: gcr.io/google_containers/defaultbackend:1.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
